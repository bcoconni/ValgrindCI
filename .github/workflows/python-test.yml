name: Test & Deploy Python Package

on: [push, pull_request]

jobs:
  Tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install Ubuntu Packages
        run: |
          sudo apt-get update
          sudo apt-get install valgrind
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip mypy
          pip install setuptools wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Type checking with mypy
        run: mypy --ignore-missing-imports ValgrindCI/*.py
      - name: Build and Install
        run: |
          python setup.py bdist_wheel
          pip install ValgrindCI --no-index -f dist/ValgrindCI*.whl
      - name: Test
        working-directory: build
        run: |
          cmake -DCMAKE_C_FLAGS_DEBUG="-g -Wall" -DCMAKE_BUILD_TYPE=Debug ../tests
          make
          valgrind --tool=memcheck --xml=yes --xml-file=test.xml ./test_basic
          ctest --output-on-failure

  Deploy:
    needs: Tests
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
